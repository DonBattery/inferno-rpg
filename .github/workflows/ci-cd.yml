---

# This workflow triggers if a feature branch is changed or merged to the master branch.
name: Test Build and Deploy

on:
  push:
    branches-ignore:
      - 'master'
  pull_request:
    branches:
      - 'master'
    types:
      - closed

# Steve
jobs:
  build-and-push-docker-image:
    name: Build and push Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set Docker tag to test (Staging environment)
        if: github.event_name == 'push'
        run: echo "DOCKER_TAG=test" >> $GITHUB_ENV

      - name: Set Docker tag to latest (Production environment)
        if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
        run: echo "DOCKER_TAG=latest" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: "{{defaultContext}}:app"
          push: true
          tags: donbattery/inferno-rpg:${{ env.DOCKER_TAG }}

  deploy-to-AWS:
    name: Deploy to AWS
    # This job only runs if a feature branch is merged to the master branch
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
    needs: [build-and-push-docker-image]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ansible

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Install dependencies, including Ansible
        run: |
          python -m pip install --upgrade pip
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Write SSH file
        env:
          SSH_KEY: ${{ secrets.ANSIBLE_SSH_KEY }}
        run: |
          echo "$SSH_KEY" > id_rsa
          chmod 600 id_rsa

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Set up JQ
        run: sudo apt-get install jq

      - name: Write Inventory file
        run: ./create_inventory.sh > inventory

      - name: Deploy to AWS with Ansible
        run: 'ansible-playbook -v -i inventory --extra-vars "role_action=deploy discord_token=${{ secrets.PRODUCTION_DISCORD_TOKEN }}" manage-app-server.yml'

...
